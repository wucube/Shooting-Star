using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Serialization;

public class Character : MonoBehaviour
{
    [Header("------ DEATH -------")]
    //角色死亡视觉特效
    [SerializeField] GameObject deathVFX;
    //角色死亡音效数据
    [SerializeField] AudioData[] deathSFX;

    [Header("------ HEALTH -------")]
    //最大血量
    [SerializeField] protected float maxHealth;

    //?????????(???)????
    [SerializeField] StatsBar onHeadHealthBar;

    //???????????????
    [SerializeField] private bool showOnHeadHealthBar = true;

    //角色当前生命值
    protected float health;

    protected virtual void OnEnable()
    {
        //最大血量赋予当前血量
        health = maxHealth;
        //头顶血条开关开启，则显示头顶血条
        if (showOnHeadHealthBar) ShowOnHeadHealthBar();
        //否则隐藏头顶血条
        else HideOnHeadHealthBar();
    }

    //?????????
    public void ShowOnHeadHealthBar()
    {
        //?????????????????
        onHeadHealthBar.gameObject.SetActive(true);
        //????????
        onHeadHealthBar.Initialize(health, maxHealth);
    }

    //??????????
    public void HideOnHeadHealthBar()
    {
        //????????????????
        onHeadHealthBar.gameObject.SetActive(false);
    }

    //角色受伤函数
    public virtual void TakeDamage(float damage)
    {
        //如果角色血量已经为0，则直接返回
        if(health==0f) return;
        //????? - ?????
        health -= damage;
        //?????????????????????????????????????????? ??????????
        if (showOnHeadHealthBar)
            onHeadHealthBar.UpdateStats(health, maxHealth);
        //?????С??0 ?????????????
        if (health <= 0) Die();
    }

    //????????
    public virtual void Die()
    {
        //???????????0??????UI?????????
        health = 0f;
        //?????????????Ч
        AudioManager.Instance.PlayerRandomSFX(deathSFX);
        //??????????????Ч
        PoolManager.Release(deathVFX, transform.position);
        //??????????
        gameObject.SetActive(false);
    }

    //??????
    public virtual void RestoreHealth(float value)
    {
        //?????????????????
        if (health == maxHealth) return;
        //??????????????????????
        health = Mathf.Clamp(health + value, 0f, maxHealth);
        
        //?????????????????????
        if (showOnHeadHealthBar)
            onHeadHealthBar.UpdateStats(health, maxHealth);
    }
    
    //?????????Э??
    public IEnumerator HealthRegenerateCoroutine(WaitForSeconds waitTime,float percent)
    {
        //?????????????
        while (health < maxHealth)
        {
            //???????????
            yield return waitTime;
            //????????????????????
            RestoreHealth(maxHealth * percent);
        }
    } 
    //????????Э??
    public IEnumerator DamageOverTimeCoroutine(WaitForSeconds waitTime, float percent)
    {
        //??????????????0
        while(health>0f)
        {
            //????????????
            yield return waitTime;
            //???????????????????
            TakeDamage(maxHealth * percent);
        }
    }
}
